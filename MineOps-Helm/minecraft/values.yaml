image:
  repository: itzg/minecraft-server
  tag: latest
  pullPolicy: IfNotPresent
  pullSecret: ""

# Minecraft is not horizontally scalable, adjusting this will most likely break your setup.
#### WARNING ####
replicaCount: 1

resources:
  requests:
    memory: 512Mi
    cpu: 500m

strategyType: Recreate

nodeSelector: {}

tolerations: []

affinity: {}

securityContext:
  # Security context settings
  runAsUser: 1000
  fsGroup: 2000

# Probes
livenessProbe:
  initialDelaySeconds: 30
  periodSeconds: 25
  failureThreshold: 50
  successThreshold: 1
  timeoutSeconds: 1
readinessProbe:
  initialDelaySeconds: 30
  periodSeconds: 25
  failureThreshold: 50
  successThreshold: 1
  timeoutSeconds: 1
startupProbe:
  enabled: false
  failureThreshold: 30
  periodSeconds: 10

initContainers: []

sidecarContainers: []

extraVolumes: []

minecraftServer:
  eula: "TRUE"
  version: "LATEST"
  type: "VANILLA"
  forgeVersion:
  spongeVersion:
  forgeInstallerUrl:
  bukkitDownloadUrl:
  spigotDownloadUrl:
  paperDownloadUrl:
  ftbModpackId:
  ftbModpackVersionId:
  cfServerMod:
  ftbLegacyJavaFixer: false
  difficulty: normal
  whitelist:
  ops:
  icon:
  maxPlayers: 20
  maxWorldSize: 100000
  allowNether: true
  announcePlayerAchievements: true
  enableCommandBlock: true
  forcegameMode: false
  generateStructures: true
  hardcore: false
  maxBuildHeight: 256
  maxTickTime: 60000
  spawnAnimals: true
  spawnMonsters: true
  spawnNPCs: true
  spawnProtection: 16
  viewDistance: 10
  levelSeed:
  gameMode: survival
  motd: "Welcome to MineOps Server!"
  pvp: false
  levelType: DEFAULT
  generatorSettings:
  worldSaveName: world
  downloadWorldUrl:
  forceReDownload: false
  downloadModpackUrl:
  removeOldMods: false
  vanillaTweaksShareCodes: []
  resourcePackUrl:
  resourcePackSha:
  resourcePackEnforce: false
  onlineMode: true
  memory: 1024M
  jvmOpts: ""
  jvmXXOpts: ""
  overrideServerProperties: false
  serviceAnnotations: {}
  serviceType: LoadBalancer
  nodePort:
  servicePort: 25565
  clusterIP:
  loadBalancerIP:
  externalIPs:

  spigetResources: []

  rcon:
    enabled: true
    port: 25575
    password: "rcon-passwd123!@#"
    existingSecret:
    secretKey: rcon-password
    serviceType: NodePort
    nodePort:
    clusterIP:
    loadBalancerIP:
    web:
      enabled: true
      image: itzg/rcon
      username: "admin"
      password: "password"
      port: 4326
      websocket: 4327
  monitor:
    enabled: true
    image: itzg/mc-monitor
    port: 8080
    debug: "true"

  extraPorts:
    []

  query:
    enabled: false
    port: 25565

extraEnv:
  {}
envFrom: []

persistence:
  annotations: {}
  storageClass: "gp2"
  dataDir:
    enabled: true
    Size: 5Gi
    # existingClaim: nil
    subPath: data

podAnnotations: {}

deploymentAnnotations: {}

serviceAnnotations: {}

rconServiceAnnotations: {}

# PLEASE NOTE! rcon must be enabled above!  It does NOT require a nodePort or loadBalancerIP
mcbackup:
  enabled: false

  image:
    repository: itzg/mc-backup
    tag: latest
    pullPolicy: IfNotPresent

  initialDelay: 2m

  backupInterval: 24h

  pauseIfNoPlayers: "false"

  pruneBackupsDays: 7

  rconRetries: 5
  rconRetryInterval: 10s

  excludes: "*.jar,cache,logs"

  backupMethod: tar

  destDir: /backups

  linkLatest: "false"

  compressMethod: "gzip"

  zstdParameters: "-3 --long=25 --single-thread"

  rcloneRemote:
  rcloneDestDir:
  rcloneCompressMethod: gzip

  rcloneConfig:

  resticRepository:

  resticAdditionalTags: "mc_backups"

  pruneResticRetention: "--keep-daily 7 --keep-weekly 5 --keep-monthly 12 --keep-yearly 75"

  resticEnvs:
    []

  extraEnvs:
    []

  resources:
    requests:
      memory: 512Mi
      cpu: 500m

  persistence:
    annotations: {}
    backupDir:
      enabled: true
      Size: 3Gi
